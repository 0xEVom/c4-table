| Num | URL | Title | Acceptance | Duplicate | Comments |
| :-: | :-: | :-: | :-: | :-: | :-: |
| 83 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/83 | [H01] Share manipulation attack due to wrong check in `withdraw_asset_amount` function ||||
| 84 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/84 | [H02] No `safe_withdrawal` option in `withdraw_protocol_liquidity` function in omnipool can be abused by frontrunners to cause losses to the admin when removing liquidity ||||
| 85 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/85 | [M01] Missing slippage control in stableswap's `add_liquidity` can lead to losses due to frontrunning. ||||
| 86 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/86 | [M02] Complete liquidity removals fail from stableswap pools ||||
| 87 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/87 | [M03] Stableswap math uses wrong iteration limits ||||
| 88 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/88 | [M04] Missing check for input=output in stableswap math ||||
| 89 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/89 | [M05] `MinimumPoolLiquidity` check affects tokens with different decimals differently ||||
| 90 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/90 | [M06] Missing price check in `add_token` in omnipool can DOS further deposits. ||||
| 91 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/91 | [M07] Weight cap limits in Omnipool can be violated via `add_token` function ||||
| 92 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/92 | [M08] No slippage check in `add_liquidity` can lead to less liquidity shares being minted to liquidity providers. ||||
| 93 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/93 | [M09] No slippage check in `remove_liquidity` function in omnipool can lead to slippage losses during liquidity withdrawal. ||||
| 94 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/94 | [M10] `withdraw_protocol_liquidity` at a wrong price can be used to drain the pool ||||
| 95 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/95 | [M11] Liquidity addition and removal in omnipool can go offline during periods of high volatility. ||||
| 96 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/96 | [M12] Stableswap decrease in Amplification factor can be used to steal tokens from the pool ||||
| 111 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/111 | QA Report ||||
| 114 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/114 | [H03] `ensure_price` slippage control in omnipools can be bypassed with swaps ||||
| 115 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/115 | [M13] Missing `REMOVE_LIQUIDITY` check in `withdraw_protocol_liquidity` function in omnipool ||||
| 116 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/116 | [M14] `add_token` in omnipool can be sandwich attacked for profit if a large amount of liquidity is being added ||||
| 136 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/136 | Analysis ||||
| 142 | https://github.com/code-423n4/2024-02-hydradx-findings/issues/142 | [H04] Inefficient Liquidity removal form stableswap can lead to losses and MEV opportunities ||||

Found 20 issues from carrotsmuggler in 2024-02-hydradx-findings repo

